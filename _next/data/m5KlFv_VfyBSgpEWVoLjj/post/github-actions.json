{"pageProps":{"frontmatter":{"title":"Deploying a Next.js Site using Github Actions","description":"GitHub Actions to Deploy a Static Site built with Next.js","date":"January 3, 2020"},"post":{"content":"\nI'm a huge fan of [GitHub Actions](https://github.com/features/actions). They're so simple but so effective at doing such a broad range of things. In short, you can tell GitHub do something on a computer everytime you push to your repository (or to a branch on a specific repository like the `main` branch).\n\nFor today's post, I'll focus on how I used an action to automate deploying my static site built with Next.js to [GitHub Pages](https://pages.github.com).\n\nI made this blog on a repository hosted on GitHub and added a GirHub Action to compile the JavaScript/React code into static HTML files. This really didn't require all that much effort.\n\n\nHere's what I had to do:\n\n1. Build a Next.js blog following the [detailed tutorial](https://nextjs.org/learn/basics/create-nextjs-app) and store the code on a GitHub repository\n2. Create a workflow file in the repository with the following path: [`./github/workflows/integrate.yml`](https://github.com/franciscojavierarceo/franciscojavierarceo.github.io/blob/main/.github/workflows/integrate.yml)\n3. Specify that workflow file to export the static files whenever I push to `main` and *commit* the exported files to a separate branch called `gh-pages` (you can just follow the workflow file I used)\n4. Manually add a `.nojekyll` file to the `gh-pages` branch (this is to resolve [this bug](https://github.com/vercel/next.js/issues/2029))\n5. Configure my repository Settings so that it sources the GitHub Pages build from the `gh-pages` branch\n\nAnd that's it, adding new blog posts is as simple as creating a new [markdown](https://www.markdownguide.org/) file and pushing to the `main` branch. The GitHub Action will handle all of the rest!\n\nThis is much nicer in behavior than my old site, which was built using Jekyll (a Ruby framework) and it's much less work than building a full application with Django to get high quality page loads. I’d add that I’m a huge fan of Django but I think for a static, fast, and lightweight site, Next.js my new go to!","excerpt":""},"previousPost":{"slug":"next-js-blog","frontmatter":{"title":"Learning Next.js","description":"Learning the Next JavaScript Framework","date":"January 2, 2020"},"excerpt":"","content":"\nIn the spirit of my last blog post talking about learning new things, I decided to learn <a href=\"https://nextjs.org/\">Next.JS</a>, which is a JavaScript framework built on top of <a href=\"https://reactjs.org/\">React</a> for web development. One of the main reasons I was particularly interested in Next.JS was because of it's opinionated optimizations.\n\nIn my last post I mentioned that I spent a lot of time learning about the technical details of Search Engine Optimization (SEO) and trying to optimize my Django application for that. I was ultimately reasonably successful in it but much of the logic to do so was tedious to author and rather unpleasant, which is why I'm excited about Next.JS, since it automates much of this for you right out of the box.\n\nTo learn it, I built this blog using their <a href=\"https://nextjs.org/learn/basics/create-nextjs-app\">tutorial</a>, which I highly recommend!\n\nMy goal is to move <a href=\"https://www.unidosfin.com/en\">Unidos</a> to Next.JS for the front-end and keep the Django back-end, much of which I've already converted to APIs."},"nextPost":{"slug":"2021","frontmatter":{"title":"Goals for 2021","description":"Sharing some of my goals for 2021","date":"January 9, 2020"},"excerpt":"","content":"\nI previously wrote about 2020 before ([link here](https://franciscojavierarceo.github.io/post/learning-new-things)) and I found that reflecting about the chaos of this past year was rather cathartic for me.\n\nWhile I feel lucky to have endured the pandemic without contracting COVID or suffering job losses, it has been quite isolating. I know that I'm not alone in feeling that and we're all getting through this in our own ways. Regardless, I found that writing my thoughts out loud was helpful, so I suppose I'll continue writing for now.\n\nSince I'll try to be writing more I figured I'd share some of my goals for the new year; so, here are my foolish high-level goals in no particular order:\n\n1. Be a better husband\n2. Talk less, listen more\n3. Cook more intentionally\n4. Speak more intentionally\n5. Help others more effectively\n6. Write at least 2x per month\n7. Exercise ~5x per week\n\nI hope I'm able to accomplish these. With the exclusion of the last two, these goals aren't particularly measurable (I'll probably find a way to measure them) but I hope to make a good effort. I'll probably look back here to attempt to hold myself accountable. Maybe I'll provide an update in June, who knows.\n\nMore specific goals that I have that are much more technical in nature are:\n- Connecting Django Rest Framework (DRF) and React while balancing handling localization.\n- Deploying a React Native application to both app stores.\n- Putting in some more hours on Airflow / Cloud Composer.\n- Learning how to train my recommendation model on Kubernetes.\n\nThese will be interesting and I'm making progress on DRF and React but I still have quite a bit of work to do.\n\nHopefully it'll be a fun and challenging year."}},"__N_SSG":true}