{"pageProps":{"frontmatter":{"title":"2021 is nearly over","description":"Where did the time go?","date":"November 17, 2021"},"post":{"content":"\nIt has been quite an extraordinary year and it has gone by terribly quickly, but I suppose that's a natural part of the aging process.\n\nSo far this year has gone completely differently than I had originally planned but I am grateful for it, it has been quite fun.\n\nReflecting briefly at my goals, which as I listed in my [previous blog](https://franciscojavierarceo.github.io/post/2021-goals) post were:\n\n```\n1. Be a better husband\n2. Talk less, listen more\n3. Cook more intentionally\n4. Speak more intentionally\n5. Help others more effectively\n6. Write at least 2x per month\n7. Exercise ~5x per week\n```\n\nI tried to improve on all of these items over the past year (some significantly more than others), but I'm not where I wanted to be on them.\n\nRegardless, I will say I learned a lot more this year by explicitly trying to improve these things. The goals I found most challengine were (1), (2), (5), and (6). I imagine this is because (1) is hard in general, (2) requires constant mental restraint from speaking up when I want to interject with a response or a thought, (5) doesn't truly realize its effectiveness in short time horizons, and (6) was simply not a priority.\n\nI'm mostly okay with the realities of this except (6), since writing requires being more intentional about my time and thoughts, which disappoints me as it suggests I was more chaotic than I wanted to be. As I grow older I realize how much more important it is to be increasingly more deliberate with the allocation of my time but I always struggle with choosing things as I really do enjoy working on and learning new things.\n\nAnyways, here's to hoping I'm more thoughtful with my time over the next couple of months and years.\n\nCheers,\nFrancisco","excerpt":""},"previousPost":{"slug":"toxic-bert-and-fast-api","frontmatter":{"title":"Bert Transformers, FastAPI, and Toxic Twitter","description":"A Data Scientist's Guide to using FastAPI and BERT to Build a twitter scanner of your tweets.","date":"April 11, 2021"},"excerpt":"","content":"\n## I will write less frequently\n\nUnfortunately, I've been writting a little less frequently than I was hoping to this year; I was targetting about once a week but I think that was (1) a little too frequent and (2) a little too ambitious of me to think I'd be able to keep up that pace.\n\n## I will write more quality\n\nI'll aim to write once or a month or so and hope for higher quality posts. \n\nIn the spirit of more interesting content (and more interesting problems for me to tinker with) in the Twitter thread below I decided I'd write a blog post on building a webtool that scans a user's historical tweets and identifies the highest risk ones.\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Is there an ML type service that can plow through history for potentially problematic tweets?</p>&mdash; Matt Galligan (@mg) <a href=\"https://twitter.com/mg/status/1372923621040082944?ref_src=twsrc%5Etfw\">March 19, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nI decided to work on this because (1) it's at the intersection of things I really enjoy (nlp, web development, and twittter), (2) I wanted to build a tool that would solve a real problem, and (3) I thought it'd be fun.\n\n## Creating a Toxic Twitter Scanner\n\nI think this tool can be broken down into 3 sub-problems:\n1. Creating a web service to handle the front-end user experience (authentication and rendering of data)\n2. Creating a machine learning model as an endpoint that handles predicting the toxicity/problematicness of a user's tweets\n3. Connecting (1) and (2) and deploying them as a service in an automated way\n\nThere's a bunch of stuff in between and technical things to handle, but this is really what I think matters at a high-level, so let's dive in!\n\n### 1. Creating a Web Service\nAs a web tool, a user should be able to authenticate with Twitter to scan their tweets and consent to the service using their data (this is to access private tweets). As a starting point, I'll probably launch this tool without any authentication and just look at a user's public tweets.\n\n### 2. Creating a Machine Learning model as an API\nThis is a reasonably straightforward process as the endpoint will be a wrapper around an existing machine learning library and the goal is to be able to send in some data and get some scores back.\n\n### 3. Connecting a Web Service to an ML API\nThis is an important step. In summary, we want to decouple the user-facing experience from the machine learning because they have very different technical requirements. The compute cluster that'll create predictions for the tweets will use much more memory than the user-facing application, so it's important to separate them so computing doesn't slow down the user experience.\n\n## Progress on Building a Scanner\n\nSo far I've been diving into using a pre-trained BERT model developed by [Laura Hanu](https://laurahanu.github.io) at [Unitary](https://www.unitary.ai) and it's been pretty fun. I've been able to score my own tweets and see the behavior of this model and see various implementation details that I'll have to be mindful of (I'll probably write more on this later).\n\nI've been tinkering with [FastAPI](https://fastapi.tiangolo.com) and figuring out how the [cookie-cutter template](https://fastapi.tiangolo.com/project-generation/) works. I don't love the way it behaves and there's a lot of strong opinions in place which is helpful but imperfect; we'll see how my opinion shapes as I spend more time with it.\n\nI'm very excited to learn [Docker Swarm](https://docs.docker.com/get-started/swarm-deploy/) as it seems like a very promising framework for deploying the model API.\n\nYou can follow my progress on this [GitHub repository](https://github.com/franciscojavierarceo/twitter-scan). Stay tuned as I'll be updating this blog with my thoughts as I chip away at this problem.\n\n---\n*Have some feedback? Feel free to [let me know](https://twitter.com/franciscojarceo)!*\n"},"nextPost":{"slug":"2021-reflection","frontmatter":{"title":"2021: A Reflection","description":"My year in review.","date":"December 31, 2021"},"excerpt":"","content":"\nI wrote a little bit about my year in my [last blog post](https://franciscojavierarceo.github.io/post/2021-is-nearly-over) but now that the year is officially ending I wanted to pause for deeper reflection.\n\nSo far this year has gone completely differently than I had originally planned but I am very grateful for it. I started this past year [writing about 2020](https://franciscojavierarceo.github.io/post/learning-new-things) and what I learned, so I thought I would do the same as it closed.\n\nThe end of 2019 and 2020 was a very big year for my family, as my wife and I moved to South Dakota, changed jobs, and bought a home. So quite a lot happend in the latest trip around the moon.\n\n# Learning\n\nI learned a lot this year, as I always try to do. Most of my focus was on software engineering, in part because of my job, and also because of my interests. So here's the list of things I've learned:\n\n- More Django, JavaScript, and React in general \n- More of the ever-evolving AWS ecosystem (it is both the same and very different than it was back in 2014)\n- React Native, mobile development, and deploying to the App Store (this is an exercise on its own)\n- The programming language Go\n- gRPC (Google Remote Procedure Call)\n\nLearning all of these things was mostly painful but also extremely fun. It takes a lot of patience and tinkering to learn to be effective with programming and I really do enjoy it. I find that I'm happiest most often when tinkering to solve new (at least new to me) computer-related puzzles, so it's been a very enjoyable year for me. In fact, we can see the data in the graph below showing all of the times I committed code:\n\n![That's a lot of commits!](2021-commit-count.png)\n<p align=\"center\" style=\"padding:0\"><i>A visualization of my daily computering</i></p>\n\nA fun fact here is that if you compare this to 2020, you'll notice the massive jump in Pull Requests (PRs), which is a fun aside.\n\n# Career\n\nI joined [Fast](https://www.fast.co) last March and it's been an absolutely wild ride, which has been both intellectually fulfilling and exciting, which is a challenging combination to sustain. \n\nI have to say that of all of the organizations that I have worked for, Fast has been the most fun, which is unexpected since I work from home in South Dakota. I thought that not being in an office would have had a bigger influence on my perception of my enjoyment of my job but as it turns out, while I do miss working in an office, the work that I *actually do* is more important to me than being physically next to people that I'm doing the work with (it's not lost on me that this should be obvious but I'm often surprised how irrational or illogical my brain is about things of this nature). \n\nI've learned so much working at an extremely fast growing startup over the last 10 months and I really think it's unlikely I'll ever return to banking after working at an organization that values engineering as much as we do.\n\nI've gotten to the place where I feel confident in saying that I am full stack, which means I need to figure out what I would like to learn next. \n\n# Next Year\n\nIn 2022, I hope to tackle a few big areas:\n\n1. I still have much to learn as a software engineer, so I hope to continue learning from the amazing people I work with\n2. I want to continue improving things I've alreaddy built, specificaly on my web and mobile app\n3. I hope to start learning more hardware as it's an area I have limited knowledge but lots of curiousity\n\nLet's hope I make some progress on those in 2022 and don't abandon (3). Overall I'm very grateful for this past year and I feel lucky to have spent it with the best person a guy could ask for.\n\nWishing you and your loved ones a Happy New Year.\n\nCheers,\nFrancisco"}},"__N_SSG":true}